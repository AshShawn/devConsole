<?xml version="1.0" encoding="utf-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
		 http://www.springframework.org/schema/context 
		 http://www.springframework.org/schema/context/spring-context-3.0.xsd  
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop 
     http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<!-- 加载properties文件 -->	
	<import resource="classpath:spring/spring-properties.xml"/>
	
	<bean id="dataSource-mgr" class="com.mchange.v2.c3p0.ComboPooledDataSource" destroy-method="close"> 
        <property name="driverClass" value="${jdbc.driverClassName}" /> 
        <property name="jdbcUrl" value="${jdbc.mgr.url}" /> 
        <property name="user" value="${jdbc.mgr.username}" /> 
        <property name="password" value="${jdbc.mgr.password}" /> 
        <property name="minPoolSize" value="15" />
        <property name="maxPoolSize" value="200" />
		<property name="checkoutTimeout" value="1000"></property>
        <property name="preferredTestQuery" value="select 1 from dual" />
        <property name="idleConnectionTestPeriod" value="30" />
    </bean> 
    
	<!-- 配置事务管理器-->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource-mgr" />
	</bean>
	
	<!-- 配置mybatis sessionFactory -->
	<bean id="sqlSessionFactory-mgr"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource-mgr" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
		<property name="mapperLocations">
			<array>
				<value>classpath:com/hll/test/dao/mapping/*.xml</value>
			</array>
		</property>
	</bean>
	
	<!-- 通知spring自动扫描basePackage下的所有Mapper并注册 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="sqlSessionFactoryBeanName"  value="sqlSessionFactory-mgr"/>
		<property name="basePackage" value="com.hll.test.dao" />
	</bean>
	
	<!-- 配置声明式事务切面 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="create*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="merge*" propagation="REQUIRED" />
			<tx:method name="del*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />

			<tx:method name="query*" read-only="true" />
			<tx:method name="get*" read-only="true" />
			<tx:method name="count*" read-only="true" />
			<tx:method name="find*" read-only="true" />
			<tx:method name="list*" read-only="true" />
			<tx:method name="select*" read-only="true" />

			<tx:method name="*" propagation="REQUIRED" />
		</tx:attributes>
	</tx:advice>
	
	<!-- 应用事务切面到Service层 -->
	<aop:config expose-proxy="true" proxy-target-class="true">
		<!-- 事务实施切入点,定义在service包和所有子包里的任意类的任意方法的执行：-->
		<aop:pointcut id="txPointcut" expression="execution(* com.hll.test.controller..*.*(..))" />
		<!-- 织入切面通知 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut" />
	</aop:config>

	<!-- 扫描对应package，支持注解 -->
	<bean class="com.hll.test.common.Util"></bean>
	
	<!-- spring启动时自动将ApplicationContext注入到该Bean中 -->
	<bean id="springUtils" class="com.hll.test.common.ContextUtil" />
	
	<!-- 使用注解方式的事务 -->
	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="false"/>
	
	<!-- logback stop hook -->
	<bean class="com.hll.test.common.LogbackFlushHook" destroy-method="destroy"></bean>
	
</beans>
